{"version":3,"file":"js/profile.7ded4749.js","mappings":"gmCAMA,MAAMA,GAASC,EAAAA,EAAAA,MAETC,EAASF,EAAOG,YAEhBC,EAAU,GAEhB,IAAK,MAAMC,KAAcH,EAAQ,CAC/B,MAAMI,EAAOJ,EAAOG,GAAYC,KAC1BC,EAAQL,EAAOG,GAAYG,MAAQN,EAAOG,GAAYG,KAAKD,MAAQL,EAAOG,GAAYG,KAAKD,MAAQ,KAErGA,GACFH,EAAQK,KAAK,CACXH,OACAC,U,gjBChBN,MAAMG,EAAc,EAEpB,S,2dCoBMC,GAAgBC,EAAAA,EAAAA,IAAS,CAC7BC,IAAK,IAAMC,EAAMC,WACjBC,IAAKC,IACHC,EAAK,oBAAqBD,MAIxBE,GAAYP,EAAAA,EAAAA,KAAS,IAAqB,UAAfE,EAAMM,KAAmB,QAAU,a,geC7BpE,MAAMV,EAAc,EAEpB,S,8UCaA,MAAMW,GAAQC,EAAAA,EAAAA,MAERC,GAAeX,EAAAA,EAAAA,KAAS,KAC5B,MAAMY,EAAO,GACPC,EAAcJ,EAAMK,UAAUC,OAUpC,OARIF,EAAc,GAChBD,EAAKf,KAAK,0BAGQ,IAAhBgB,GACFD,EAAKf,KAAK,kBAGLe,K,wUC7BT,MAAMd,EAAc,EAEpB,S,mnBCyBMkB,GAAOC,EAAAA,EAAAA,IAAI,MAEXC,GAAOD,EAAAA,EAAAA,IAAIf,EAAMC,YAEjBgB,GAAiBnB,EAAAA,EAAAA,KAAS,IAAME,EAAMC,cAE5CiB,EAAAA,EAAAA,IAAMD,GAAgBd,IACpBa,EAAKb,MAAQA,EAERA,IACHW,EAAKX,MAAMgB,MAAMhB,MAAQ,SAI7B,MAAMiB,EAASC,IACb,MAAMlB,EAAQkB,EAAMC,OAAOC,OAASF,EAAMG,aAAaD,MAEvDP,EAAKb,MAAQA,EAAM,GAEnBC,EAAK,oBAAqBY,EAAKb,Q,0eC9CjC,MAAMP,EAAc,EAEpB,S,+gBCFA,MAAMA,EAAc,EAEpB,S,8nBCKA,MAAM6B,GAAYC,EAAAA,EAAAA,KAEZC,GAAW7B,EAAAA,EAAAA,KAAS,IAAM2B,EAAUE,WAEpCC,GAAgBb,EAAAA,EAAAA,IAAI,I,skBCX1B,MAAMnB,EAAc,EAEpB,Q,yFCWA,MAAM6B,GAAYC,EAAAA,EAAAA,KAEZG,GAAad,EAAAA,EAAAA,IAAI,CAAC,QAAS,YAE3Be,GAAcC,EAAAA,EAAAA,IAAS,CAC3BC,KAAMP,EAAUE,SAChBM,MAAOR,EAAUS,YAGbC,GAAeJ,EAAAA,EAAAA,IAAS,CAC5BK,iBAAkB,GAClBC,SAAU,GACVC,sBAAuB,KAGnBC,EAAgB,KACpBd,EAAUe,QAAQV,IAGdW,EAAa,O,wgFChCnB,MAAM,EAAc,EAEpB","sources":["webpack://admin-one-vue-tailwind/./src/components/BottomOtherPagesSection.vue","webpack://admin-one-vue-tailwind/./src/components/BottomOtherPagesSection.vue?8ac8","webpack://admin-one-vue-tailwind/./src/components/CheckRadioPicker.vue","webpack://admin-one-vue-tailwind/./src/components/CheckRadioPicker.vue?5501","webpack://admin-one-vue-tailwind/./src/components/Field.vue","webpack://admin-one-vue-tailwind/./src/components/Field.vue?7442","webpack://admin-one-vue-tailwind/./src/components/FilePicker.vue","webpack://admin-one-vue-tailwind/./src/components/FilePicker.vue?4311","webpack://admin-one-vue-tailwind/./src/components/TitledSection.vue","webpack://admin-one-vue-tailwind/./src/components/UserCard.vue","webpack://admin-one-vue-tailwind/./src/components/UserCard.vue?13c6","webpack://admin-one-vue-tailwind/./src/views/Profile.vue","webpack://admin-one-vue-tailwind/./src/views/Profile.vue?24e8"],"sourcesContent":["<script setup>\nimport { useRouter } from 'vue-router'\nimport { mdiGithub } from '@mdi/js'\nimport TitledSection from '@/components/TitledSection.vue'\nimport Icon from '@/components/Icon.vue'\n\nconst router = useRouter()\n\nconst routes = router.getRoutes()\n\nconst screens = []\n\nfor (const routeIndex in routes) {\n  const path = routes[routeIndex].path\n  const title = routes[routeIndex].meta && routes[routeIndex].meta.title ? routes[routeIndex].meta.title : null\n\n  if (title) {\n    screens.push({\n      path,\n      title\n    })\n  }\n}\n</script>\n\n<template>\n  <titled-section last>\n    <h1 class=\"flex items-center justify-center flex-col md:flex-row text-2xl text-gray-500 dark:text-gray-400 mb-12\">\n      <span class=\"md:mr-3\">Please star this project on</span>\n      <a\n        href=\"https://github.com/justboil/admin-one-vue-tailwind\"\n        class=\"inline-flex items-center justify-center text-blue-600\"\n        target=\"_blank\"\n      >\n        <icon\n          :path=\"mdiGithub\"\n          size=\"36\"\n          class=\"mr-1\"\n        />\n        <span>GitHub</span>\n      </a>\n    </h1>\n    <h1 class=\"text-2xl text-gray-500 dark:text-gray-400 mb-12\">\n      Check out other components and layouts at<br>\n      <template\n        v-for=\"(screen, index) in screens\"\n        :key=\"screen.path\"\n      >\n        <router-link\n          :to=\"screen.path\"\n          class=\"text-blue-600\"\n        >\n          {{ screen.title }}\n        </router-link>\n        <template v-if=\"index + 1 < screens.length\">\n          ,\n        </template>\n      </template>\n      <br>\n      screen samples\n    </h1>\n    <h1 class=\"text-2xl text-gray-500 dark:text-gray-400\">\n      Get more with <a\n        href=\"https://justboil.me/tailwind-admin-templates/vue-dashboard/\"\n        target=\"_blank\"\n        class=\"text-blue-600\"\n      >Premium version</a>\n    </h1>\n  </titled-section>\n</template>\n","import script from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BottomOtherPagesSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  options: {\n    type: Object,\n    default: () => {}\n  },\n  name: {\n    type: String,\n    required: true\n  },\n  type: {\n    type: String,\n    default: 'checkbox'\n  },\n  column: Boolean,\n  modelValue: {\n    type: [Object, Array, String, Number],\n    default: null\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst computedValue = computed({\n  get: () => props.modelValue,\n  set: value => {\n    emit('update:modelValue', value)\n  }\n})\n\nconst inputType = computed(() => props.type === 'radio' ? 'radio' : 'checkbox')\n</script>\n\n<template>\n  <div\n    class=\"flex justify-start flex-wrap -mb-3\"\n    :class=\"{'flex-col':column}\"\n  >\n    <label\n      v-for=\"(value, key) in options\"\n      :key=\"key\"\n      :class=\"type\"\n      class=\"mr-6 mb-3 last:mr-0\"\n    >\n      <input\n        v-model=\"computedValue\"\n        :type=\"inputType\"\n        :name=\"name\"\n        :value=\"key\"\n      >\n      <span class=\"check\" />\n      <span class=\"control-label\">{{ value }}</span>\n    </label>\n  </div>\n</template>\n","import script from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CheckRadioPicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, useSlots } from 'vue'\n\ndefineProps({\n  label: {\n    type: String,\n    default: null\n  },\n  labelFor: {\n    type: String,\n    default: null\n  },\n  help: {\n    type: String,\n    default: null\n  }\n})\n\nconst slots = useSlots()\n\nconst wrapperClass = computed(() => {\n  const base = []\n  const slotsLength = slots.default().length\n\n  if (slotsLength > 1) {\n    base.push('grid grid-cols-1 gap-3')\n  }\n\n  if (slotsLength === 2) {\n    base.push('md:grid-cols-2')\n  }\n\n  return base\n})\n</script>\n\n<template>\n  <div class=\"mb-6 last:mb-0\">\n    <label\n      v-if=\"label\"\n      :for=\"labelFor\"\n      class=\"block font-bold mb-2\"\n    >{{ label }}</label>\n    <div :class=\"wrapperClass\">\n      <slot />\n    </div>\n    <div\n      v-if=\"help\"\n      class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"\n    >\n      {{ help }}\n    </div>\n  </div>\n</template>\n","import script from \"./Field.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Field.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { mdiUpload } from '@mdi/js'\nimport { computed, ref, watch } from 'vue'\nimport JbButton from '@/components/JbButton.vue'\n\nconst props = defineProps({\n  modelValue: {\n    type: [Object, File, Array],\n    default: null\n  },\n  label: {\n    type: String,\n    default: 'Upload'\n  },\n  icon: {\n    type: String,\n    default: mdiUpload\n  },\n  accept: {\n    type: String,\n    default: null\n  },\n  color: {\n    type: String,\n    default: 'info'\n  }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst root = ref(null)\n\nconst file = ref(props.modelValue)\n\nconst modelValueProp = computed(() => props.modelValue)\n\nwatch(modelValueProp, value => {\n  file.value = value\n\n  if (!value) {\n    root.value.input.value = null\n  }\n})\n\nconst upload = event => {\n  const value = event.target.files || event.dataTransfer.files\n\n  file.value = value[0]\n\n  emit('update:modelValue', file.value)\n\n  // Use this as an example for handling file uploads\n  // let formData = new FormData()\n  // formData.append('file', file.value)\n\n  // const mediaStoreRoute = `/your-route/`\n\n  // axios\n  //   .post(mediaStoreRoute, formData, {\n  //     headers: {\n  //       'Content-Type': 'multipart/form-data'\n  //     },\n  //     onUploadProgress: progressEvent\n  //   })\n  //   .then(r => {\n  //\n  //   })\n  //   .catch(err => {\n  //\n  //   })\n}\n\n// const uploadPercent = ref(0)\n//\n// const progressEvent = progressEvent => {\n//   uploadPercent.value = Math.round(\n//     (progressEvent.loaded * 100) / progressEvent.total\n//   )\n// }\n</script>\n\n<template>\n  <div class=\"flex items-stretch justify-start relative\">\n    <label class=\"inline-flex\">\n      <jb-button\n        as=\"a\"\n        :label=\"label\"\n        :icon=\"icon\"\n        :color=\"color\"\n        :class=\"{ 'rounded-r-none': file }\"\n      />\n      <input\n        ref=\"root\"\n        type=\"file\"\n        class=\"absolute top-0 left-0 w-full h-full opacity-0 outline-none cursor-pointer -z-1\"\n        :accept=\"accept\"\n        @input=\"upload\"\n      >\n    </label>\n    <div v-if=\"file\">\n      <span\n        class=\"inline-flex px-4 py-2 justify-center bg-gray-100 dark:bg-gray-800 border-gray-200 dark:border-gray-700 border rounded-r\"\n      >\n        {{ file.name }}\n      </span>\n    </div>\n  </div>\n</template>\n","import script from \"./FilePicker.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FilePicker.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./TitledSection.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TitledSection.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { computed, ref } from 'vue'\nimport { useMainStore } from '@/stores/main'\nimport { mdiCheckDecagram } from '@mdi/js'\nimport Level from '@/components/Level.vue'\nimport UserAvatar from '@/components/UserAvatar.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport CheckRadioPicker from '@/components/CheckRadioPicker.vue'\nimport Pill from '@/components/Pill.vue'\n\nconst mainStore = useMainStore()\n\nconst userName = computed(() => mainStore.userName)\n\nconst userSwitchVal = ref([])\n</script>\n\n<template>\n  <card-component rounded=\"\">\n    <level type=\"justify-around lg:justify-center\">\n      <user-avatar class=\"lg:mx-12\" />\n      <div class=\"space-y-3 text-center md:text-left lg:mx-12\">\n        <div class=\"flex justify-center md:block\">\n          <check-radio-picker\n            v-model=\"userSwitchVal\"\n            name=\"sample-switch\"\n            type=\"switch\"\n            :options=\"{ one: 'Notifications' }\"\n          />\n        </div>\n        <h1 class=\"text-2xl\">\n          Howdy, <b>{{ userName }}</b>!\n        </h1>\n        <p>Last login <b>12 mins ago</b> from <b>127.0.0.1</b></p>\n        <div class=\"flex justify-center md:block\">\n          <pill\n            text=\"Verified\"\n            type=\"info\"\n            :icon=\"mdiCheckDecagram\"\n          />\n        </div>\n      </div>\n    </level>\n  </card-component>\n</template>\n","import script from \"./UserCard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserCard.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { ref, reactive } from 'vue'\nimport { useMainStore } from '@/stores/main'\nimport { mdiAccount, mdiAccountCircle, mdiLock, mdiMail, mdiAsterisk, mdiFormTextboxPassword } from '@mdi/js'\nimport MainSection from '@/components/MainSection.vue'\nimport CardComponent from '@/components/CardComponent.vue'\nimport TitleBar from '@/components/TitleBar.vue'\nimport Divider from '@/components/Divider.vue'\nimport Field from '@/components/Field.vue'\nimport Control from '@/components/Control.vue'\nimport FilePicker from '@/components/FilePicker.vue'\nimport JbButton from '@/components/JbButton.vue'\nimport BottomOtherPagesSection from '@/components/BottomOtherPagesSection.vue'\nimport JbButtons from '@/components/JbButtons.vue'\nimport UserCard from '@/components/UserCard.vue'\n\nconst mainStore = useMainStore()\n\nconst titleStack = ref(['Admin', 'Profile'])\n\nconst profileForm = reactive({\n  name: mainStore.userName,\n  email: mainStore.userEmail\n})\n\nconst passwordForm = reactive({\n  password_current: '',\n  password: '',\n  password_confirmation: ''\n})\n\nconst submitProfile = () => {\n  mainStore.setUser(profileForm)\n}\n\nconst submitPass = () => {\n  //\n}\n</script>\n\n<template>\n  <title-bar :title-stack=\"titleStack\" />\n\n  <user-card />\n\n  <main-section>\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <card-component\n        title=\"Edit Profile\"\n        :icon=\"mdiAccountCircle\"\n        form\n        @submit.prevent=\"submitProfile\"\n      >\n        <field\n          label=\"Avatar\"\n          help=\"Max 500kb\"\n        >\n          <file-picker />\n        </field>\n\n        <field\n          label=\"Name\"\n          help=\"Required. Your name\"\n        >\n          <control\n            v-model=\"profileForm.name\"\n            :icon=\"mdiAccount\"\n            name=\"username\"\n            required\n            autocomplete=\"username\"\n          />\n        </field>\n        <field\n          label=\"E-mail\"\n          help=\"Required. Your e-mail\"\n        >\n          <control\n            v-model=\"profileForm.email\"\n            :icon=\"mdiMail\"\n            type=\"email\"\n            name=\"email\"\n            required\n            autocomplete=\"email\"\n          />\n        </field>\n\n        <divider />\n\n        <jb-buttons>\n          <jb-button\n            color=\"info\"\n            type=\"submit\"\n            label=\"Submit\"\n          />\n          <jb-button\n            color=\"info\"\n            label=\"Options\"\n            outline\n          />\n        </jb-buttons>\n      </card-component>\n\n      <card-component\n        title=\"Change Password\"\n        :icon=\"mdiLock\"\n        form\n        @submit.prevent=\"submitPass\"\n      >\n        <field\n          label=\"Current password\"\n          help=\"Required. Your current password\"\n        >\n          <control\n            v-model=\"passwordForm.password_current\"\n            :icon=\"mdiAsterisk\"\n            name=\"password_current\"\n            type=\"password\"\n            required\n            autocomplete=\"current-password\"\n          />\n        </field>\n\n        <divider />\n\n        <field\n          label=\"New password\"\n          help=\"Required. New password\"\n        >\n          <control\n            v-model=\"passwordForm.password\"\n            :icon=\"mdiFormTextboxPassword\"\n            name=\"password\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n          />\n        </field>\n\n        <field\n          label=\"Confirm password\"\n          help=\"Required. New password one more time\"\n        >\n          <control\n            v-model=\"passwordForm.password_confirmation\"\n            :icon=\"mdiFormTextboxPassword\"\n            name=\"password_confirmation\"\n            type=\"password\"\n            required\n            autocomplete=\"new-password\"\n          />\n        </field>\n\n        <divider />\n\n        <jb-buttons>\n          <jb-button\n            type=\"submit\"\n            color=\"info\"\n            label=\"Submit\"\n          />\n          <jb-button\n            color=\"info\"\n            label=\"Options\"\n            outline\n          />\n        </jb-buttons>\n      </card-component>\n    </div>\n  </main-section>\n\n  <bottom-other-pages-section />\n</template>\n","import script from \"./Profile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["router","useRouter","routes","getRoutes","screens","routeIndex","path","title","meta","push","__exports__","computedValue","computed","get","props","modelValue","set","value","emit","inputType","type","slots","useSlots","wrapperClass","base","slotsLength","default","length","root","ref","file","modelValueProp","watch","input","upload","event","target","files","dataTransfer","mainStore","useMainStore","userName","userSwitchVal","titleStack","profileForm","reactive","name","email","userEmail","passwordForm","password_current","password","password_confirmation","submitProfile","setUser","submitPass"],"sourceRoot":""}